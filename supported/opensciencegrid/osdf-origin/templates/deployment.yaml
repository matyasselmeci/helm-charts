apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "osdf-origin.fullname" . }}
  labels:
    app: {{ template "osdf-origin.name" . }}
    release: {{ .Release.Name }}
    instance: {{ .Values.Instance | quote }}
spec:
  {{- if .Values.replica.enabled }}
  replicas: 1
  strategy:
    type: Recreate
  {{- end }}
  selector:
    matchLabels:
      app: {{ template "osdf-origin.name" . }}
      release: {{ .Release.Name }}
      instance: {{ .Values.Instance | quote }}
  template:
    metadata:
      labels:
        app: {{ template "osdf-origin.name" . }}
        release: {{ .Release.Name }}
        instance: {{ .Values.Instance | quote }}

    spec:
      {{- if .Values.nodeName }}
      nodeName: {{ .Values.nodeName }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.hostNetwork }}
      hostNetwork: true
      {{- end }}
      volumes:
        {{- if .Values.dataVolumes }}
        {{- range .Values.dataVolumes }}
        - name: {{ .name }}
          {{- if and (not (empty .claimName)) (not (empty .hostPath)) }}
            {{- fail "Specify claimName or hostPath, not both" -}}
          {{- else if .claimName }}
          persistentVolumeClaim:
            claimName: {{ .claimName }}
          {{- else if .hostPath }}
          hostPath:
            path: {{ .hostPath }}
            type: Directory
          {{- else }}
            {{- fail "Specify either claimName or hostPath" -}}
          {{- end }}
        {{- end }}
        {{- end }}

        {{- if .Values.hostCertKeySecret }}
        - name: hostcertkey
          secret:
            secretName: {{ .Values.hostCertKeySecret }}
            items:
            - key: tls.crt
              path: hostcert.pem
              mode: 0o644
            - key: tls.key
              path: hostkey.pem
              mode: 0o400
        {{- end }}

        {{- if .Values.s3KeysSecret }}
        - name: s3-keys
          secret:
            secretName: {{ .Values.s3KeysSecret }}
            items:
            - key: access_key
              path: access_key
              mode: 0o644
            - key: private_key
              path: private_key
              mode: 0o400
        {{- end }}

        - name: config
          configMap:
            name: {{ template "osdf-origin.fullname" . }}

        {{- if .Values.xrootdLogVolumeClaimName }}
        - name: xrootd-log
          persistentVolumeClaim:
            claimName: {{ .Values.xrootdLogVolumeClaimName }}
        {{- end }}

        {{- if .Values.sssd.enabled }}
        - name: sssd-config
          secret:
            secretName: {{ .Values.sssd.configSecret }}
            defaultMode: 384  # octal: 0600 (u=rw, go=)
        - name: sssd-sockets
          emptyDir: {}
        {{ end }}
      # end volumes

      containers:
        - name: origin
          image: "{{ template "osdf-origin.origin-registry" . }}/{{ template "osdf-origin.origin-organization" . }}/stash-origin:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: XC_RESOURCENAME
              value: "{{ .Values.topologyResourceName }}"
            - name: ORIGIN_FQDN
              value: "{{ .Values.topologyFQDN }}"
            - name: XC_ROOTDIR
              value: "/xcache/namespace"
            - name: XRDHOST
              value: "{{ .Values.topologyFQDN }}"
            {{- if .Values.multiUser.enabled }}
            - name: XC_ENABLE_MULTIUSER
              value: "True"
            {{ end }}
            {{- if and .Values.publicOrigin.enabled .Values.publicOrigin.exports }}
            - name: XC_PUBLIC_ORIGIN_EXPORT
              value: "{{ first .Values.publicOrigin.exports }}"
            {{- end }}
            {{- if and .Values.authOrigin.enabled .Values.authOrigin.exports }}
            - name: XC_AUTH_ORIGIN_EXPORT
              value: "{{ first .Values.authOrigin.exports }}"
            {{- end }}
            {{- if .Values.extraEnv }}
              {{- toYaml .Values.extraEnv | nindent 12 }}
            {{- end }}

          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbeEnabled }}
          livenessProbe:
            tcpSocket:
              {{- if .Values.authOrigin.enabled }}
              port: 1095
              {{- else if .Values.publicOrigin.enabled }}
              port: 1094
              {{- end }}
            initialDelaySeconds: 600
            periodSeconds: 60
          {{- end }}
          ports:
            {{- if .Values.authOrigin.enabled }}
            - containerPort: 1095
              hostPort: {{ default 1095 .Values.authOrigin.port }}
              protocol: TCP
            {{- end }}
            {{- if .Values.publicOrigin.enabled }}
            - containerPort: 1094
              hostPort: {{ default 1094 .Values.publicOrigin.port }}
              protocol: TCP
            {{- end }}
          {{- if .Values.multiUser.enabled }}
          securityContext:
            capabilities:
              add:
                - SETUID
                - SETGID
                - DAC_OVERRIDE
          {{ end }}
          volumeMounts:
            {{- range .Values.dataVolumes }}
            - mountPath: /xcache/namespace{{ .mountPath }}
              name: {{ .name }}
            {{ end }}
            {{- if .Values.hostCertKeySecret }}
            - mountPath: /etc/grid-security/hostcert.pem
              name: hostcertkey
              subPath: hostcert.pem
            - mountPath: /etc/grid-security/hostkey.pem
              name: hostcertkey
              subPath: hostkey.pem
            {{ end }}
            {{- if .Values.s3KeysSecret }}
            - mountPath: /s3-secrets
              name: s3-keys
            {{ end }}
            - mountPath: /etc/xrootd/config.d/extra_exports.cfg
              name: config
              subPath: extra_exports.cfg
            {{- if and .Values.publicOrigin.enabled .Values.publicOrigin.authfileLocal }}
            - mountPath: /run/stash-origin/Authfile.local
              name: config
              subPath: stash-origin-Authfile.local
            {{ end }}
            {{- if and .Values.authOrigin.enabled .Values.authOrigin.authfileLocal }}
            - mountPath: /run/stash-origin-auth/Authfile.local
              name: config
              subPath: stash-origin-auth-Authfile.local
            {{ end }}
            {{- if and .Values.authOrigin.enabled .Values.authOrigin.scitokensConfLocal }}
            - mountPath: /run/stash-origin-auth/scitokens.conf.local
              name: config
              subPath: stash-origin-auth-scitokens.conf.local
            {{ end }}
            {{- if .Values.extraXrootdConfigBefore }}
            - mountPath: /etc/xrootd/config.d/00-extra-before.cfg
              name: config
              subPath: 00-extra-before.cfg
            {{ end }}
            {{- if .Values.extraXrootdConfigAfter }}
            - mountPath: /etc/xrootd/config.d/99-extra-after.cfg
              name: config
              subPath: 99-extra-after.cfg
            {{ end }}
            {{- if .Values.multiUser.enabled }}
            - mountPath: /etc/xrootd/config.d/60-helm-multiuser.cfg
              name: config
              subPath: 60-helm-multiuser.cfg
            {{ end }}
            {{- if .Values.xrootdLogVolumeClaimName }}
            - mountPath: /var/log/xrootd
              name: xrootd-log
            {{ end }}
            {{- if .Values.sssd.enabled }}
            - name: sssd-sockets
              mountPath: /var/lib/sss/pipes
            {{ end }}
          # end volumeMounts
        {{- if .Values.sssd.enabled }}
        - name: sssd
          image: hub.opensciencegrid.org/opensciencegrid/sssd:3.6-release
          imagePullPolicy: Always
          resources:
            requests:
              cpu: "0.2"
              memory: "128Mi"
            limits:
              cpu: "1"
              memory: "1Gi"
          volumeMounts:
            - name: sssd-config
              mountPath: /etc/sssd/sssd.conf
              subPath: sssd.conf
            - name: sssd-sockets
              mountPath: /var/lib/sss/pipes
        {{ end }}
      # end containers
    # end spec
  # end template
# end spec

# vim:et:sw=2:sts=2:ts=8
