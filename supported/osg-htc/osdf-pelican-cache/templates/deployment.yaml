apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "osdf-pelican-cache.fullname" . }}
  labels:
    {{- include "osdf-pelican-cache.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "osdf-pelican-cache.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "osdf-pelican-cache.selectorLabels" . | nindent 8 }}

    spec:
      {{- if .Values.nodeName }}
      nodeName: {{ .Values.nodeName }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.hostNetwork }}
      hostNetwork: true
      {{- end }}
      enableServiceLinks: false

      initContainers:
      - args:
        - -o
        - scitokens.cfg
        - --output-dir
        - /topology
        - "https://topology.opensciencegrid.org/cache/scitokens.conf?fqdn={{ .Values.topologyFQDN }}"
        image: curlimages/curl:7.77.0
        name: topology-scitokens-fetcher
        volumeMounts:
        - mountPath: /topology
          name: topology-scitokens-cfg

      containers:
        - name: osdf-cache
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.extraEnv }}
          env:
              {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: 8443
              name: pelican
              protocol: TCP
            - containerPort: 443
              name: pelican-webui
              protocol: TCP
          volumeMounts:
            {{- if .Values.webPasswordSecret }}
            - mountPath: /etc/pelican/server-web-passwd
              name: webserver-passwd
              readOnly: true
              subPath: server-web-passwd
            {{ end }}
            - mountPath: /etc/pelican/topology
              name: topology-scitokens-cfg
            - mountPath: /cache
              name: cache-data
            {{- if or .Values.certmanager.enabled .Values.hostCertKeySecret }}
            - mountPath: /etc/pelican/cert-orig
              name: pelican-cache-ssl-cert
            {{ end }}
            - mountPath: /var/log/pelican
              name: logging-volume
            - mountPath: /etc/pelican/pelican.yaml
              name: config
              subPath: pelican.yaml
          # end volumeMounts
      # end containers

      volumes:
        - name: topology-scitokens.cfg
          emptyDir: {}
        {{- if .Values.webPasswordSecret }}
        - name: webserver-passwd
          secret:
            items:
            - key: webserver-passwd
              mode: "0644"
              path: server-web-passwd
          secretName: {{ .Values.webPasswordSecret }}
        {{ end }}

        - name: cache-data
        {{- if .Values.cacheVolumeClaimName }}
          persistentVolumeClaim:
            claimName: {{ .Values.cacheVolumeClaimName }}
        {{- else }}
          emptyDir: {}
        {{- end }}

        {{- if or .Values.certmanager.enabled .Values.hostCertKeySecret }}
        - name: pelican-cache-ssl-cert
          secret:
            {{- if .Values.certmanager.enabled }}
            secretName: {{ template "osdf-pelican-cache.fullname" . }}-cert
            {{- else if .Values.hostCertKeySecret }}
            secretName: {{ .Values.hostCertKeySecret }}
            {{- end }}
            items:
            - key: tls.crt
              mode: 0o644
              path: tls.crt
            - key: tls.key
              mode: 0o400
              path: tls.key
        {{- end }}

        - name: config
          configMap:
            name: {{ template "osdf-pelican-cache.fullname" . }}

        - name: logging-volume
        {{- if .Values.logging.volumeClaimName }}
          persistentVolumeClaim:
            claimName: {{ .Values.logging.volumeClaimName }}
        {{- else }}
          emptyDir: {}
        {{- end }}

      # end volumes
    # end spec
  # end template
# end spec

# vim:et:sw=2:sts=2:ts=8
